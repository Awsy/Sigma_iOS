import Foundation


// First task - Функція обчислення факторіалу числа.
/*
Створити функцію, яка приймає число та повертає його
факторіал. Реалізація функції не повинна викликати жодну вбудовану
математичну функцію мови Swift (наприклад, factn).
*/

func factorialCalc(value: Int) -> Int {
	var calcValue = value
	var factorial = 1
	
	if value <= 1 {
		return 1
	}
	
	while calcValue >= 2 {
		factorial *= calcValue
		calcValue -= 1
	}
	
	return factorial
}

factorialCalc(value: 3)
factorialCalc(value: 4)
//----------------------------------------------------------



// Third task - Функція-аналізатор символа.
/*
Створити функцію, яка аналізує вхідний символ на його
належність до літер або цифр, належність до літер англійської чи
української абеток, належність до літер великого або малого регістрів.
Результатом виконання функції є результати аналізу. Функція повинна
здійснювати зрозумілий користувачу вивід на екран результатів аналізу.
*/

func symbolAnalysis(char: Character) {
	



}

symbolAnalysis(char: "b")
// К сожалению не смог реализовать эту функцию
//----------------------------------------------------------




// Fourth task - Функція-аналізатор рядка.
/*
Створити функцію, яка аналізує вхідний рядок на кількість
входжень кожного символа. Результатом виконання функції є таблиця
усіх символів рядка та кількостей їх входжень.
*/


func specificCharCount(str: String) -> [Character:Int] {
	let strArray = Array (str)
	var valDict = [Character:Int]()
	for char in strArray {
		valDict [char, default: 0] += 1
	}
	return valDict
}
//----------------------------------------------------------



// Fifth task - Функція-калькулятор чисел.
/*
Створити функцію, яка приймає два числа-операнди та функцію-
операцію і повертає результат її виконання над операндами.

Реалізувати підтримку наступних дій над числами: додавання,
віднімання, множення, операція остачі від ділення, піднесення до
степеня (не використовуючи вбудовних математичних функцій Swift,
наприклад power). Реалізувати меню вибору функції-операції, у якому
звертання до основної функції-калькулятора є забороненим. Реалізація
виконання математичних операцій не потребує користувацького вводу з
клавіатури - все виконується послідовно. Від користувача очікується
лише введення вхідних даних.
*/

	
func performTwoNumCalculation(n1: Double, n2: Double) -> Double? {
	
	let number: Double = Double()
	let intermediateCalculation: (n1: Double, calcMethod: String)?
	
	if let n1 = intermediateCalculation?.n1,
	   let operation = intermediateCalculation?.calcMethod {
		
		switch operation {
			case "+":
				return n1 + n2
			case "-":
				return n1 - n2
			case "×":
				return n1 * n2
			case "÷":
				return n1 / n2
			default:
				fatalError("The operation passed in does not match any of the cases.")
		}
		
	}
	
	return number
}
//----------------------------------------------------------



// Sixth task - Функція перевірки належності точки колу.
/*
Створити функцію, яка приймає масив кіл, а також точку, та
повертає найбільше з кіл, у яке входить ця точка. Використання класів
та(або) структур у реалізації функції є забороненим.
*/

// К сожалению не успел реализовать
